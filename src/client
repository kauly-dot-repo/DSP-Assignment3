import ballerina/io;
import ballerina/http;
//import ballerina/lang.'int;


//interface
http:Client fieEndpoint = check new ("http://localhost:8080");
http:Client studentEndpoint = check new ("http://localhost:8082");
http:Client supervisorEndpoint = check new ("http://localhost:8083");
http:Client HODEndpoint = check new ("http://localhost:8084");
http:Client HDCEndpoint = check new ("http://localhost:8085");

public function main () {

        io:println("WELCOME TO     POSTGRAD");
        io:println("******************************");
        io:println("1.Student ");
        io:println("2.Supervisor  ");
        io:println("3.HOD  ");
        io:println("4.FIE  ");
        io:println("5.HDC   ");

       string choice = io:readln("Enter choice :");

       if (choice === "1"){
              io:println("WELCOME TO    POSTGRAD");
                    io:println("******************************");
                    io:println("1.Submit Application ");
                    io:println("2.Submit Proposal  ");
                    io:println("3.Submit thesis  ");

                  string option = io:readln("\nEnter option\n");

                    match option {
                        "1" => { 
                            
                             string name = io:readln("Enter name :");
                             string program  = io:readln("Enter  program :");
                             string Student_No = io:readln("Enter Student No :");
                             string contactNo  = io:readln("Enter  contactNo :");
                        
                          var  response = studentEndpoint->post("/graphql",{ query: " { studentProducerd(name:\""+name+"\",program:\""+program+"\",Student_No:\""+Student_No+"\",contactNo:\""+contactNo+"\") }" });
        
                                if (response is  http:Response) {
                                    var jsonResponse = response.getJsonPayload();

                                    if (jsonResponse is json) {
                                        
                                        io:println(jsonResponse);
                                    } else {
                                        io:println("Invalid payload received:", jsonResponse.message());
                                    }

                                }
                        
                        }
                        "2" => { 
                            string studentNo = io:readln("Student No :");
                            string background = io:readln("BackGround :");
                             string probStat  = io:readln("Enter  Problem Statement :");
                             string Obj = io:readln("Enter Objectives :");
                             string ScopeLimit  = io:readln("Enter  Scope Limitation :");
                        
                          var  response = studentEndpoint->post("/graphql",{ query: " { studentProposal(studentNo:\""+studentNo+"\",background:\""+background+"\",probStat:\""+probStat+"\",ScopeLimit:\""+ScopeLimit+"\") }" });
        
                                if (response is  http:Response) {
                                    var jsonResponse = response.getJsonPayload();

                                    if (jsonResponse is json) {
                                        
                                        io:println(jsonResponse);
                                    } else {
                                        io:println("Invalid payload received:", jsonResponse.message());
                                    }

                                }
                        }
                        "3" =>{
                            thes();
                        }
                    }


             //accessing the graphql service vID 
           

       }
